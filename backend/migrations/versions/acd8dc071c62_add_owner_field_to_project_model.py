"""Add owner field to Project model

Revision ID: acd8dc071c62
Revises: 436aa4a9cf7f
Create Date: 2025-10-15 19:46:25.209877

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'acd8dc071c62'
down_revision: Union[str, Sequence[str], None] = '436aa4a9cf7f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('projects', 'owner_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('projects', 'status',
               existing_type=postgresql.ENUM('active', 'inactive', 'completed', name='projectstatus'),
               nullable=True)
    op.drop_constraint(op.f('projects_owner_id_fkey'), 'projects', type_='foreignkey')
    op.drop_constraint(op.f('projects_admin_id_fkey'), 'projects', type_='foreignkey')
    op.create_foreign_key(None, 'projects', 'users', ['admin_id'], ['id'])
    op.create_foreign_key(None, 'projects', 'users', ['owner_id'], ['id'])
    op.alter_column('tasks', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_constraint(op.f('tasks_assigned_to_id_fkey'), 'tasks', type_='foreignkey')
    op.drop_constraint(op.f('tasks_project_id_fkey'), 'tasks', type_='foreignkey')
    op.create_foreign_key(None, 'tasks', 'users', ['assigned_to_id'], ['id'])
    op.create_foreign_key(None, 'tasks', 'projects', ['project_id'], ['id'])
    
    # op.alter_column('team_members', 'team_id',
    #            existing_type=sa.INTEGER(),
    #            nullable=True)
    # op.alter_column('team_members', 'user_id',
    #            existing_type=sa.INTEGER(),
    #            nullable=True)
    
    op.drop_constraint(op.f('team_members_user_id_fkey'), 'team_members', type_='foreignkey')
    op.drop_constraint(op.f('team_members_team_id_fkey'), 'team_members', type_='foreignkey')
    op.create_foreign_key(None, 'team_members', 'teams', ['team_id'], ['id'])
    op.create_foreign_key(None, 'team_members', 'users', ['user_id'], ['id'])
    op.drop_constraint(op.f('fk_teams_owner_id_users'), 'teams', type_='foreignkey')
    op.drop_constraint(op.f('teams_project_id_fkey'), 'teams', type_='foreignkey')
    op.create_foreign_key(None, 'teams', 'users', ['owner_id'], ['id'])
    op.create_foreign_key(None, 'teams', 'projects', ['project_id'], ['id'])
    op.alter_column('users', 'role',
               existing_type=postgresql.ENUM('admin', 'owner', 'member', name='user_roles'),
               type_=sa.String(),
               nullable=True)
    op.drop_column('users', 'password')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('password', sa.TEXT(), server_default=sa.text("''::text"), autoincrement=False, nullable=False))
    op.alter_column('users', 'role',
               existing_type=sa.String(),
               type_=postgresql.ENUM('admin', 'owner', 'member', name='user_roles'),
               nullable=False)
    op.drop_constraint(None, 'teams', type_='foreignkey')
    op.drop_constraint(None, 'teams', type_='foreignkey')
    op.create_foreign_key(op.f('teams_project_id_fkey'), 'teams', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_teams_owner_id_users'), 'teams', 'users', ['owner_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'team_members', type_='foreignkey')
    op.drop_constraint(None, 'team_members', type_='foreignkey')
    op.create_foreign_key(op.f('team_members_team_id_fkey'), 'team_members', 'teams', ['team_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('team_members_user_id_fkey'), 'team_members', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('team_members', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('team_members', 'team_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.create_foreign_key(op.f('tasks_project_id_fkey'), 'tasks', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('tasks_assigned_to_id_fkey'), 'tasks', 'users', ['assigned_to_id'], ['id'], ondelete='SET NULL')
    op.alter_column('tasks', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.create_foreign_key(op.f('projects_admin_id_fkey'), 'projects', 'users', ['admin_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('projects_owner_id_fkey'), 'projects', 'users', ['owner_id'], ['id'], ondelete='SET NULL')
    op.alter_column('projects', 'status',
               existing_type=postgresql.ENUM('active', 'inactive', 'completed', name='projectstatus'),
               nullable=False)
    op.alter_column('projects', 'owner_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
